<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="runc">
	
	
	<!-- Load variables -->
	
	<loadproperties srcFile="application.properties"/>
	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>
	
	<!-- Definitions of classpaths -->
	
	<path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.hibernate.dir}">
             <include name="*.jar"/>
        </fileset>
	</path>
	
	<path id="run.classpath">
	        <pathelement location="${build.dir}"/>
	        <!-- configuration -->
	        <pathelement location="${conf.dir}"/>
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>

	        <fileset dir="${lib.hibernate.dir}">
	             <include name="*.jar"/>
	        </fileset>
	</path>
	
	<!-- Targets necessary -->
	
	<target name="clean" description="Remove the files created during the previous build">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="build" description="Build" depends="clean">
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.jar.dir}"/>
		<javac
			srcdir="${src.dir}"
			destdir="${build.dir}"
			debug="false"
			encoding="utf-8"
			compiler="modern"
			target="1.7"
			source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>
		
	</target>
	
	<!--Creates the deployable jar file  -->
	<target name="dist" depends="build">
		<jar destfile="${build.jar.dir}/Team1.jar">
			<fileset dir="${build.dir}" />
			<zipgroupfileset dir="${lib.dir}" includes="*.jar" />
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.team1.Intro" />
			</manifest>
		</jar>
		<propertyfile
			file = "version.properties">
			<entry key="build.revision.number" type="int" operation="+" value="${build.revision.number}" />
		</propertyfile>
	</target>

	<target name="jrun" depends="dist">
		<java jar="${build.jar.dir}/Team1.jar" fork="true"/>
	</target>
	
	
    <target name="run" depends="build" description="run">
        <java classname="ee.ut.math.tvt.team1.Intro" classpathref="run.classpath" fork="yes" />
	</target>
	
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.team1.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	
	<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	    <target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>
	
	<target name="git_commit" description="Pushes commits to our github">
		<input
			message="Enter commit comment."
			addproperty="commit.comment"
		/>
		<input
			message="Enter username."
			addproperty="commit.username"
		/>
		<input
			message="Enter password."
			addproperty="commit.pw"
		/>
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
		    <arg value="git add -A"/>
		</exec>
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
		    <arg value='git commit -m "${commit.comment}"'/>
		</exec>
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
		    <arg value="git push https://${commit.username}:${commit.pw}@github.com/RTougjas/Team1.git"/>
		</exec>
	</target>
	
	<target name="git_tag" description="Creates a new tag and synchronizes it with github">
		<input
			message="Enter tag name."
			addproperty="tag.name"
		/>
		<input
			message="Enter tag comment."
			addproperty="tag.comment"
		/>
		<input
			message="Enter username."
			addproperty="commit.username"
		/>
		<input
			message="Enter password."
			addproperty="commit.pw"
		/>
			<exec executable="cmd" failonerror="true">
				<arg value="/c"/>
			    <arg value='git tag -a ${tag.name} -m "${tag.comment}"'/>
			</exec>
			<exec executable="cmd" failonerror="true">
				<arg value="/c"/>
			    <arg value="git push --tags https://${commit.username}:${commit.pw}@github.com/RTougjas/Team1.git"/>
			</exec>
	</target>
	
</project>
	